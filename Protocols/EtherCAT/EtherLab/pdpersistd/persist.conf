#-----------------------------------------------------------------------------
#
# vim: syntax=yaml tw=78 expandtab ts=4
#
# $Id$
#
# pdpersistd sample configuration.
#
#-----------------------------------------------------------------------------

---
database: "persist.db" # Path to database. Can be overridden with
                       # command-line option --database
host: "ctl350"         # Host name or IP address. Can be overridden with
                       # command-line option --host.
port: 2346             # TCP port. Can be overridden with command-line option
                       # --port.

restore: "/Persistence" # Path to an optional restore variable. This variable
                        # is used to determine, if persistent values were
                        # already restored. If (and only if) its value is 0,
                        # variables will be restored. When the restoring takes
                        # place, the value is set to non-zero to avoid
                        # duplicated restoring; thus the variable has to be
                        # writable. If it is non-empty, auto-reconnect takes
                        # place after the connection is lost and the --restore
                        # command-line-argument is ignored.

reconnect: 5 # Seconds to wait before the next connection attempt is made.
             # This setting is only used, if the "restore" setting is set.

keepalive: 10 # begin to send MSR <ping/> commands after
              # nothing is received for the specified time (in seconds)

timeout: 30 # close the connection after nothing is received for the specified
            # time (in seconds). Be sure to have continuous data (not only
            # event-based registrations) or enable keepalive.

variables: # List of persistent variables. Every variable section has to begin
           # with a hyphen (YAML list syntax).

#
# Complete example
#
-
    value: "/system/var"      # Variable to observe. It is queried with
                              # a sample time of 1 s (or event-based if no
                              # continuous subscription possible) and written
                              # to the database, if its value changes.
                              # Mandatory.

    write: "/system/offset"   # Write variable. On restore, the stored
                              # value is written to this variable. Default:
                              # Same as 'value' setting.

    apply: "/system/applyVar" # Apply event. Variable is incremented
                              # after restore. Default: No apply.

    update: 5                 # Minimum write interval in seconds. 0 means to
                              # update only on process shutdown. Variables
                              # with sample time 0 are always stored on
                              # change. Default: 0. Type: (Positive) integer.

    stable: true              # Write value only when stable.
                              # Minimum stable time is given via 'update'
                              # setting. Default: false. Type: Boolean.

#
# Simple example; for example to restore a simple parameter
#
- value: "/system/LoadTables/Aux1/tableData"
